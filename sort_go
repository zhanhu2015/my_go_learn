package sort

import (
	"fmt"
	"sort"
	"strconv"
	"strings"
)

//学生成绩结构体
type StuScore struct {
	//相机
	cam  string
	//ip
	ip string
}

type StuScores []StuScore

//Len()
func (s StuScores) Len() int {
	return len(s)
}

//Less():ip低到高排序
func (s StuScores) Less(i, j int) bool {
	i_ip_str := strings.Split(s[i].ip, ".")[3]
	j_ip_str := strings.Split(s[j].ip, ".")[3]
	i_ip_int, _:=strconv.Atoi(i_ip_str)
	j_ip_int, _:=strconv.Atoi(j_ip_str)

	return i_ip_int < j_ip_int
}

//Swap()
func (s StuScores) Swap(i, j int) {
	s[i], s[j] = s[j], s[i]
}

func main() {
	stus := StuScores{
		{"cam1", "192.168.1.1"},
		{"cam2", "192.168.1.4"},
		{"cam3", "192.168.1.3"},
		{"cam4", "192.168.1.1"}}

	fmt.Println("Default:")
	//原始顺序
	for _, v := range stus {
		fmt.Println(v.cam, ":", v.ip)
	}
	fmt.Println()
	//StuScores已经实现了sort.Interface接口
	sort.Sort(stus)

	fmt.Println("Sorted:")
	//排好序后的结构
	for _, v := range stus {
		fmt.Println(v.cam, ":", v.ip)
	}

	//判断是否已经排好顺序，将会打印true
	fmt.Println("IS Sorted?", sort.IsSorted(stus))
}